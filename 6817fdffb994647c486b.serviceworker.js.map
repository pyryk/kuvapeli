{"version":3,"sources":["webpack:///webpack/bootstrap 6817fdffb994647c486b","webpack:///./src/cache.sw.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ;;AAER;AACA;AACA;AACA,KAAI;AACJ;AACA,EAAC;AACD","file":"6817fdffb994647c486b.serviceworker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6817fdffb994647c486b\n **/","const CACHE_NAME = 'kuvapeli-http-cache';\n\n/*eslint-disable max-nested-callbacks */\nself.addEventListener('fetch', function(event) {\n\tevent.respondWith(\n\t\tcaches.match(event.request)\n\t\t\t.then(function(cachedResponse) {\n\t\t\t\t// Cache hit - return response\n\t\t\t\tif (cachedResponse) {\n\t\t\t\t\treturn cachedResponse;\n\t\t\t\t}\n\n\t\t\t\t// IMPORTANT: Clone the request. A request is a stream and\n\t\t\t\t// can only be consumed once. Since we are consuming this\n\t\t\t\t// once by cache and once by the browser for fetch, we need\n\t\t\t\t// to clone the response\n\t\t\t\tconst fetchRequest = event.request.clone();\n\n\t\t\t\treturn fetch(fetchRequest).then(\n\t\t\t\t\tfunction(response) {\n\t\t\t\t\t\t// Check if we received a valid response\n\t\t\t\t\t\tif (!response || response.status !== 200 || response.type !== 'basic') {\n\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// IMPORTANT: Clone the response. A response is a stream\n\t\t\t\t\t\t// and because we want the browser to consume the response\n\t\t\t\t\t\t// as well as the cache consuming the response, we need\n\t\t\t\t\t\t// to clone it so we have 2 stream.\n\t\t\t\t\t\tconst responseToCache = response.clone();\n\n\t\t\t\t\t\t/*eslint-disable no-undef */\n\t\t\t\t\t\tcaches.open(CACHE_NAME)\n\t\t\t\t\t\t/*eslint-enable no-undef */\n\t\t\t\t\t\t\t.then(function(cache) {\n\t\t\t\t\t\t\t\tcache.put(event.request, responseToCache);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t})\n\t\t);\n});\n/*eslint-enable max-nested-callbacks */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/eslint-loader!./src/cache.sw.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}