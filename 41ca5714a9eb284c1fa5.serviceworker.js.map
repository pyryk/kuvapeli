{"version":3,"sources":["webpack:///41ca5714a9eb284c1fa5.serviceworker.js","webpack:///webpack/bootstrap 41ca5714a9eb284c1fa5","webpack:///./src/cache.sw.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","CACHE_NAME","self","addEventListener","event","respondWith","caches","match","request","then","cachedResponse","fetchRequest","clone","fetchResponse","fetch","response","status","type","responseToCache","open","cache","put","console","log","waitUntil","keys","keyList","Promise","all","map","key","i"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,GE5CvB,KAAAQ,GAAA,qBAGAC,MAAAC,iBAAA,iBAAAC,GACAA,EAAAC,YACAC,OAAAC,MAAAH,EAAAI,SACAC,KAAA,SAAAC,GAMA,KAAAC,GAAAP,EAAAI,QAAAI,QAEAC,EAAAC,MAAAH,GAAAF,KACA,SAAAM,GAEA,IAAAA,GAAA,MAAAA,EAAAC,QAAA,UAAAD,EAAAE,KACA,MAAAF,EAOA,MAAAG,GAAAH,EAAAH,OAOA,OALAN,QAAAa,KAAAlB,GACAQ,KAAA,SAAAW,GACAA,EAAAC,IAAAjB,EAAAI,QAAAU,KAGAH,GAIA,OAAAL,GACAA,EAEAG,OAMAX,KAAAC,iBAAA,qBACAmB,QAAAC,IAAA,2BAGArB,KAAAC,iBAAA,oBAAAC,GACAkB,QAAAC,IAAA,0BACAnB,EAAAoB,UACAlB,OAAAmB,OAAAhB,KAAA,SAAAiB,GACA,MAAAC,SAAAC,IAAAF,EAAAG,IAAA,SAAAC,EAAAC,GACA,MAAAzB,kBAAAoB,EAAAK","file":"41ca5714a9eb284c1fa5.serviceworker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\tconst CACHE_NAME = 'kuvapeli-http-cache';\n\t\n\t/*eslint-disable max-nested-callbacks */\n\tself.addEventListener('fetch', function(event) {\n\t\tevent.respondWith(\n\t\t\tcaches.match(event.request)\n\t\t\t\t.then(function(cachedResponse) {\n\t\n\t\t\t\t\t// IMPORTANT: Clone the request. A request is a stream and\n\t\t\t\t\t// can only be consumed once. Since we are consuming this\n\t\t\t\t\t// once by cache and once by the browser for fetch, we need\n\t\t\t\t\t// to clone the response\n\t\t\t\t\tconst fetchRequest = event.request.clone();\n\t\n\t\t\t\t\tconst fetchResponse = fetch(fetchRequest).then(\n\t\t\t\t\t\tfunction(response) {\n\t\t\t\t\t\t\t// Check if we received a valid response\n\t\t\t\t\t\t\tif (!response || response.status !== 200 || response.type !== 'basic') {\n\t\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// IMPORTANT: Clone the response. A response is a stream\n\t\t\t\t\t\t\t// and because we want the browser to consume the response\n\t\t\t\t\t\t\t// as well as the cache consuming the response, we need\n\t\t\t\t\t\t\t// to clone it so we have 2 stream.\n\t\t\t\t\t\t\tconst responseToCache = response.clone();\n\t\n\t\t\t\t\t\t\tcaches.open(CACHE_NAME)\n\t\t\t\t\t\t\t\t.then(function(cache) {\n\t\t\t\t\t\t\t\t\tcache.put(event.request, responseToCache);\n\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\n\t\t\t\t\tif (cachedResponse) {\n\t\t\t\t\t\treturn cachedResponse;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn fetchResponse;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t});\n\t\n\tself.addEventListener('install', function() {\n\t\tconsole.log('serviceworker install');\n\t});\n\t\n\tself.addEventListener('activate', function(event) {\n\t\tconsole.log('serviceworker activate');\n\t\tevent.waitUntil(\n\t\t\tcaches.keys().then(function(keyList) {\n\t\t\t\treturn Promise.all(keyList.map(function(key, i) {\n\t\t\t\t\treturn caches.delete(keyList[i]);\n\t\t\t\t}));\n\t\t\t})\n\t\t);\n\t});\n\t/*eslint-enable max-nested-callbacks */\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** 41ca5714a9eb284c1fa5.serviceworker.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 41ca5714a9eb284c1fa5\n **/","const CACHE_NAME = 'kuvapeli-http-cache';\n\n/*eslint-disable max-nested-callbacks */\nself.addEventListener('fetch', function(event) {\n\tevent.respondWith(\n\t\tcaches.match(event.request)\n\t\t\t.then(function(cachedResponse) {\n\n\t\t\t\t// IMPORTANT: Clone the request. A request is a stream and\n\t\t\t\t// can only be consumed once. Since we are consuming this\n\t\t\t\t// once by cache and once by the browser for fetch, we need\n\t\t\t\t// to clone the response\n\t\t\t\tconst fetchRequest = event.request.clone();\n\n\t\t\t\tconst fetchResponse = fetch(fetchRequest).then(\n\t\t\t\t\tfunction(response) {\n\t\t\t\t\t\t// Check if we received a valid response\n\t\t\t\t\t\tif (!response || response.status !== 200 || response.type !== 'basic') {\n\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// IMPORTANT: Clone the response. A response is a stream\n\t\t\t\t\t\t// and because we want the browser to consume the response\n\t\t\t\t\t\t// as well as the cache consuming the response, we need\n\t\t\t\t\t\t// to clone it so we have 2 stream.\n\t\t\t\t\t\tconst responseToCache = response.clone();\n\n\t\t\t\t\t\tcaches.open(CACHE_NAME)\n\t\t\t\t\t\t\t.then(function(cache) {\n\t\t\t\t\t\t\t\tcache.put(event.request, responseToCache);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (cachedResponse) {\n\t\t\t\t\treturn cachedResponse;\n\t\t\t\t} else {\n\t\t\t\t\treturn fetchResponse;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n});\n\nself.addEventListener('install', function() {\n\tconsole.log('serviceworker install');\n});\n\nself.addEventListener('activate', function(event) {\n\tconsole.log('serviceworker activate');\n\tevent.waitUntil(\n\t\tcaches.keys().then(function(keyList) {\n\t\t\treturn Promise.all(keyList.map(function(key, i) {\n\t\t\t\treturn caches.delete(keyList[i]);\n\t\t\t}));\n\t\t})\n\t);\n});\n/*eslint-enable max-nested-callbacks */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/eslint-loader!./src/cache.sw.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}